<%= form_with(model: @diary_entry, local: true) do |form| %>

  <% if @diary_entry.errors.any? %>
    <div class="notification is-danger">
      <ul>
        <% @diary_entry.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :title, class: "label" %>
    <div class="control">
      <%= form.text_field :title, class: "input" %>
    </div>
  </div>

  <div class="field">
    <%= form.label :entry_date, class: "label" %>
    <div class="control">
      <!-- Hidden date field for form submission -->
      <%= form.date_field :entry_date, class: "input", id: "diary_entry_date_hidden", style: "display: none;" %>
      <!-- Visible formatted date input -->
      <input type="text" 
             id="diary_entry_date_display" 
             class="input" 
             placeholder="Select a date..."
             readonly
             onclick="document.getElementById('diary_entry_date_hidden').showPicker()"
             style="cursor: pointer;">
    </div>
    <p class="help has-text-info">Click to select a date - it will show with day name</p>
  </div>

  <div class="field">
    <%= form.label :content, "Diary Entry Content", class: "label" %>
    <div class="control">
      <%= form.rich_text_area :content, class: "rich-text-area", data: { behavior: "content-placeholder" } %>
    </div>
    <p class="help">Write your diary entry here...</p>
  </div>



  <div class="field">
    <div class="control">
      <%= form.submit class: "button is-primary" %>
    </div>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const dateInputHidden = document.getElementById('diary_entry_date_hidden');
  const dateInputDisplay = document.getElementById('diary_entry_date_display');
  
  function updateDateDisplay() {
    if (dateInputHidden.value) {
      const selectedDate = new Date(dateInputHidden.value + 'T00:00:00');
      const options = { 
        weekday: 'long', 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric' 
      };
      const formattedDate = selectedDate.toLocaleDateString('en-US', options);
      dateInputDisplay.value = `ðŸ“… ${formattedDate}`;
      dateInputDisplay.classList.add('has-text-primary');
    } else {
      dateInputDisplay.value = '';
      dateInputDisplay.classList.remove('has-text-primary');
    }
  }
  
  // Update display when hidden date input changes
  dateInputHidden.addEventListener('change', updateDateDisplay);
  
  // Handle clicking on display input to open date picker
  dateInputDisplay.addEventListener('click', function() {
    if (dateInputHidden.showPicker) {
      dateInputHidden.showPicker();
    } else {
      // Fallback for browsers that don't support showPicker
      dateInputHidden.focus();
      dateInputHidden.click();
    }
  });
  
  // Update display on page load if date is already set
  updateDateDisplay();
});
</script>





